<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.3.xsd       
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
        http://www.springframework.org/schema/jee
        http://www.springframework.org/schema/jee/spring-jee-4.3.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
        ">

	<context:component-scan base-package="com.fsmflying.sys.dm" />
	<context:component-scan base-package="com.fsmflying.spring" />
	<context:component-scan base-package="com.fsmflying.hibernate.service.impl" />

	<!-- <import resource="classpath:springmvc.xml"/> -->

	<!-- 自动加载属性配置文件 -->
	<context:property-placeholder location="classpath:jtajdbc.properties" />

	<!-- 1.指定Spring配置中用到的属性文件 -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">			
			<list>
				<value>classpath:service.properties</value>
				<value>/WEB-INF/classes/jdbc.properties</value>
			</list>
		</property>
	</bean>

	<import resource="classpath:springXaAtomikosDataSourceConfig.xml"/>
	
	

	<!-- atomikos事务管理器 -->
	<bean id="atomikosTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager"
		init-method="init" destroy-method="close">
		<description>UserTransactionManager</description>
		<property name="forceShutdown" value="true" />
	</bean>

	<bean id="atomikosUserTransaction" class="com.atomikos.icatch.jta.UserTransactionImp">
		<property name="transactionTimeout" value="300" />
	</bean>

	<!-- spring 事务管理器 -->
	<bean id="springTransactionManager"
		class="org.springframework.transaction.jta.JtaTransactionManager">
		<property name="transactionManager" ref="atomikosTransactionManager" />
		<property name="userTransaction" ref="atomikosUserTransaction" />
	</bean>

	<!-- 定义事务规则的拦截器 http://sjsky.iteye.com -->
	<bean id="transactionInterceptor"
		class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<property name="transactionManager" ref="springTransactionManager" />
		<property name="transactionAttributes">
			<props>
				<prop key="*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>

	<!-- 声明式事务边界配置 所有的bean公用一个代理bean http://sjsky.iteye.com -->
	<bean id="baseTransactionProxy"
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean"
		abstract="true">
		<property name="transactionManager" ref="springTransactionManager" />
		<property name="transactionAttributes">
			<props>
				<!-- 可以根据实际情况细化配置提高性能 -->
				<prop key="*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>

	<!-- spring 事务模板 <bean id="transactionTemplate" class="org.springframework.transaction.support.TransactionTemplate"> 
		<property name="transactionManager" ref="springTransactionManager"/> </bean> 
		<bean id="sysadminJdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate"> 
		<constructor-arg ref="sysadminDataSource"/> </bean> <bean id="logJdbcTemplate" 
		class="org.springframework.jdbc.core.JdbcTemplate"> <constructor-arg ref="logDataSource"/> 
		</bean> <bean id="sequenceJdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate"> 
		<constructor-arg ref="sequenceDataSource"/> </bean> -->

	<bean id="sysadminHibernateTemplate" class="org.springframework.orm.hibernate4.HibernateTemplate">
		<property name="sessionFactory" ref="sysadminSessionFactory" />
	</bean>
	<bean id="sequenceHibernateTemplate" class="org.springframework.orm.hibernate4.HibernateTemplate">
		<property name="sessionFactory" ref="sequenceSessionFactory" />
	</bean>
	<bean id="logHibernateTemplate" class="org.springframework.orm.hibernate4.HibernateTemplate">
		<property name="sessionFactory" ref="logSessionFactory" />
	</bean>


	<context:annotation-config />

	<tx:annotation-driven transaction-manager="springTransactionManager"
		proxy-target-class="true" />


	<!-- sessionFactory -->
	<bean id="sysadminSessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="sysadminDataSource" />
		<property name="annotatedClasses">
			<list>
				<value>com.fsmflying.sys.dm.SysUser</value>
				<value>com.fsmflying.sys.dm.SysRole</value>
				<value>com.fsmflying.sys.dm.SysDictDir</value>
				<value>com.fsmflying.sys.dm.SysDictItem</value>
				<value>com.fsmflying.sys.dm.SysCompany</value>
				<value>com.fsmflying.sys.dm.SysDepartment</value>
				<value>com.fsmflying.sys.dm.SysEmployee</value>
				<value>com.fsmflying.sys.dm.SysConfig</value>
				<value>com.fsmflying.sys.dm.SysCustomPage</value>
				<value>com.fsmflying.sys.dm.SysDataAuth</value>
				<value>com.fsmflying.sys.dm.SysDataAuthItem</value>
				<value>com.fsmflying.sys.dm.SysFile</value>
				<value>com.fsmflying.sys.dm.SysTab</value>
				<value>com.fsmflying.sys.dm.SysMenu</value>
				<value>com.fsmflying.sys.dm.SysFuncPoint</value>
			</list>
		</property>
		<property name="annotatedPackages">
			<list>
				<value>com.fsmflying.sys.dm</value>
			</list>
		</property>
		<property name="mappingResources">
			<list>
				<!--<value>SysUser.hbm.xml</value> -->
			</list>
		</property>
		<property name="jtaTransactionManager" ref="springTransactionManager" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
				<prop key="hibernate.dialect">${sysadmin.hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>


				<!--<prop key="hibernate.temp.use_jdbc_metadata_defaults">false</prop> -->

				<!-- <prop key="hibernate.transaction.coordinator_class">jta</prop> <prop 
					key="hibernate.current_session_context_class">jta</prop> <prop key="hibernate.current_session_context_class">org.springframework.orm.hibernate4.SpringSessionContext</prop> 
					<prop key="hibernate.current_session_context_class">org.springframework.orm.hibernate4.SpringJtaSessionContext</prop> -->

				<!-- <prop key="hibernate.transaction.factory_class">org.hibernate.engine.transaction.internal.jta.CMTTransactionFactory</prop> 
					<prop key="hibernate.transaction.factory_class">org.hibernate.engine.transaction.internal.jta.JtaTransactionFactory</prop> -->
				<!-- org.hibernate.engine.transaction.spi.AbstractTransactionImpl org.hibernate.internal.SessionImpl 
					org.hibernate.engine.transaction.internal.jta.JtaTransactionFactory <prop 
					key="hibernate.transaction.jta.platform">org.hibernate.engine.transaction.jta.platform.internal.JBossAppServerJtaPlatform</prop> -->

				<!-- <prop key="hibernate.transaction.factory_class">org.hibernate.engine.transaction.internal.jta.JtaTransactionFactory</prop> 
					<prop key="hibernate.current_session_context_class">jta</prop> -->
				<prop key="hibernate.current_session_context_class">jta</prop>


				<!-- hibernate 3 <prop key="cache.provider_class">org.hibernate.cache.EhCacheProvider</prop> -->
				<!-- hibernate 4 -->
				<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory
				</prop>
				<prop key="hibernate.cache.use_second_level_cache">true</prop>
				<prop key="hibernate.cache.use_query_cache">true</prop>
			</props>
		</property>
		<qualifier value="sysadminSessionFactory" />
	</bean>

	<bean id="logSessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="logDataSource" />
		<property name="annotatedClasses">
			<list>
				<value>com.fsmflying.sys.dm.SysLog</value>
			</list>
		</property>
		<property name="annotatedPackages">
			<list>
				<value>com.fsmflying.sys.dm</value>
			</list>
		</property>
		<property name="mappingResources">
			<list>
				<!--<value>SysUser.hbm.xml</value> -->
			</list>
		</property>
		<property name="jtaTransactionManager" ref="springTransactionManager"></property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
				<prop key="hibernate.dialect">${log.hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				<!--<prop key="hibernate.temp.use_jdbc_metadata_defaults">false</prop> -->

				<!-- <prop key="hibernate.current_session_context_class">thread</prop> 
					<prop key="hibernate.current_session_context_class">org.springframework.orm.hibernate4.SpringSessionContext</prop> 
					<prop key="hibernate.current_session_context_class">jta</prop> <prop key="hibernate.current_session_context_class">org.springframework.orm.hibernate4.SpringJtaSessionContext</prop> 
					<property name="transaction.manager_lookup_class" value="org.hibernate.transaction.WeblogicTransactionManagerLookup" 
					/> -->
				<prop key="hibernate.current_session_context_class">jta</prop>

				<!-- hibernate 3 -->
				<prop key="cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
				<!-- hibernate 4 -->
				<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory
				</prop>
				<prop key="hibernate.cache.use_second_level_cache">true</prop>
				<prop key="hibernate.cache.use_query_cache">true</prop>

			</props>
		</property>
		<qualifier value="logSessionFactory" />
	</bean>

	<bean id="sequenceSessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="sequenceDataSource" />
		<property name="annotatedClasses">
			<list>
				<value>com.fsmflying.sys.dm.SysSequence</value>
				<!-- <value>com.fsmflying.sys.dm.SysSequenceHistory</value> -->
			</list>
		</property>
		<property name="annotatedPackages">
			<list>
				<value>com.fsmflying.sys.dm</value>
			</list>
		</property>
		<property name="mappingResources">
			<list>
				<!--<value>SysUser.hbm.xml</value> -->
			</list>
		</property>
		<property name="jtaTransactionManager" ref="springTransactionManager"></property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
				<prop key="hibernate.dialect">${sequence.hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				<!--<prop key="hibernate.temp.use_jdbc_metadata_defaults">false</prop> -->

				<!-- <prop key="hibernate.current_session_context_class">thread</prop> 
					<prop key="hibernate.current_session_context_class">org.springframework.orm.hibernate4.SpringSessionContext</prop> 
					<prop key="hibernate.current_session_context_class">jta</prop> <prop key="hibernate.current_session_context_class">org.springframework.orm.hibernate4.SpringJtaSessionContext</prop> -->
				<prop key="hibernate.current_session_context_class">jta</prop>

				<!-- hibernate 3 -->
				<prop key="cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
				<!-- hibernate 4 -->
				<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory
				</prop>
				<prop key="hibernate.cache.use_second_level_cache">true</prop>
				<prop key="hibernate.cache.use_query_cache">true</prop>

			</props>
		</property>

		<qualifier value="sequenceSessionFactory" />
	</bean>

	<!-- The transaction manager -->
	<tx:annotation-driven transaction-manager="springTransactionManager"
		proxy-target-class="true" />

	<!-- <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager"> 
		<property name="sessionFactory" ref="mySessionFactory" /> </bean> -->


	<!--spring提供的事务管理器 <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"> 
		<property name="dataSource" ref="dataSource"/> </bean> -->
	<!--与hibernate集成时，使用的事务管理器 <bean id="txManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager"> 
		<property name="sessionFactory" ref="mySessionFactory"/> </bean> -->

	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>

	<tx:advice id="txAdvice" transaction-manager="springTransactionManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true" />
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>
	<!-- <tx:jta-transaction-manager userTransaction="atomikosUserTransaction" 
		transactionManager="atomikosTransactionManager"> </tx:jta-transaction-manager> -->

	<aop:config>
		<aop:pointcut id="myServicePointcut" expression="execution(* com.fsmflying..*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="myServicePointcut" />
	</aop:config>





	<!-- services -->
	<bean id="systemManageService"
		class="com.fsmflying.hibernate.service.impl.SystemManageServiceImpl">
		<property name="hibernateTemplate" ref="sysadminHibernateTemplate" />
		<property name="sessionFactory" ref="sysadminSessionFactory" />
		<property name="sessionObtainedWay" value="1" />
	</bean>

	<bean id="configService" class="com.fsmflying.hibernate.service.impl.ConfigServiceImpl">
		<!--<property name="systemManagerService" ref="systemManageService"></property> -->
		<property name="systemManageService" ref="systemManageService" />
		<property name="hibernateTemplate" ref="sysadminHibernateTemplate" />
		<property name="sessionFactory" ref="sysadminSessionFactory" />
		<property name="sessionObtainedWay" value="1" />
	</bean>

	<bean id="sequenceService"
		class="com.fsmflying.hibernate.service.impl.SequenceServiceImpl">
		<!--<property name="sessionFactory" ref="sequenceSessionFactory"></property> -->
		<property name="hibernateTemplate" ref="sequenceHibernateTemplate" />
		<property name="sessionFactory" ref="sequenceSessionFactory" />
		<property name="sessionObtainedWay" value="1" />
	</bean>

	<bean id="logService" class="com.fsmflying.hibernate.service.impl.LogServiceImpl">
		<!--<property name="sessionFactory" ref="logSessionFactory"/> -->
		<property name="hibernateTemplate" ref="logHibernateTemplate" />
		<property name="sessionFactory" ref="logSessionFactory" />
		<property name="sessionObtainedWay" value="1" />
		<!--  <property name="sessionObtainedWay" value="${service.hibernate.sessionObtainedWay}" />-->

		<property name="isWriteDatabase" value="true" />
		<property name="appName" value="MavenCommonWeb05" />
		<property name="defaultLogLevel" value="1" />
	</bean>

</beans>
